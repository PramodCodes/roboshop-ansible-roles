- name: copy mongodb repo
  ansible.builtin.copy:
    src: mongodb.repo
    dest: /etc/yum.repos.d/mongodb.repo

- name: Install mongodb client
  ansible.builtin.dnf:
    name: mongodb-org-shell
    state: present

# you cannot load same data twice you will get duplicate keys error
#check if data is loaded or not
- name: "get the entries count for {{component}}"
  ansible.builtin.command:  mongo --host mongodb.pka.in.net --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
  register: entries_count
  when: component == "catalogue"

- name: "get the entries count for {{component}}"
  ansible.builtin.command: mongo --host mongodb.pka.in.net --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
  register: entries_count
  when: component == "user"

# Step 2: Set a default value for entries_count if skipped
- name: Set default entries_count if skipped
  ansible.builtin.set_fact:
    entries_count: {"stdout": None}
  when: entries_count is not defined

- name: print the count
  ansible.builtin.debug:
    msg: "entries count: {{entries_count}}"
  when: entries_count is defined

- name: load catalogue data
  ansible.builtin.shell: "mongo --host mongodb.pka.in.net < /app/schema/{{component}}.js"
  # the below will check the data in db and only loads when count is 0
  when:
  #  entries_count.stdout == "0" # keep double quotes because its not number but string
    - component == "catalogue"  # Ensure the correct component
    - entries_count is defined  # Ensure the variable exists
    - entries_count.stdout == "0"  # Only load data if count is 0
